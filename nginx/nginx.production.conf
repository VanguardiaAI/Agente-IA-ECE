# Configuración Nginx para Eva AI - Producción
# Dominio: ia.elcorteelectrico.com

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuración de logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Configuración de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Compresión Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Configuración de caché
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m max_size=100m inactive=60m use_temp_path=off;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=chat:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=20r/s;

    # Configuración de upstream
    upstream web_backend {
        server web-app:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream mcp_backend {
        server mcp-server:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Redirección HTTP a HTTPS
    server {
        listen 80;
        server_name ia.elcorteelectrico.com;

        # Permitir Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /usr/share/nginx/html;
            allow all;
        }

        # Redireccionar todo el tráfico a HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Configuración HTTPS principal
    server {
        listen 443 ssl;
        http2 on;
        server_name ia.elcorteelectrico.com;

        # Configuración SSL
        ssl_certificate /etc/letsencrypt/live/ia.elcorteelectrico.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ia.elcorteelectrico.com/privkey.pem;
        
        # Configuración SSL moderna
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Headers de seguridad
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;" always;

        # Archivos estáticos
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Compresión específica para estáticos
            location ~* \.(js|css)$ {
                gzip_static on;
            }
        }

        # Favicon
        location = /favicon.ico {
            alias /usr/share/nginx/html/static/favicon.ico;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # API del MCP Server
        location /mcp/ {
            proxy_pass http://mcp_backend/;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Sin caché para API MCP
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Webhooks de WhatsApp (alta prioridad)
        location /api/webhooks/whatsapp {
            limit_req zone=webhook burst=50 nodelay;
            
            proxy_pass http://web_backend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts cortos para webhooks
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Sin caché para webhooks
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Webhook de carritos abandonados
        location /webhook/cart-abandoned {
            limit_req zone=webhook burst=20 nodelay;
            
            proxy_pass http://web_backend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts cortos
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # API endpoints con rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://web_backend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Caché selectivo para algunos endpoints
            proxy_cache app_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # WebSocket para chat en tiempo real
        location /ws/ {
            limit_req zone=chat burst=10 nodelay;
            
            proxy_pass http://web_backend;
            
            # Headers específicos para WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts largos para WebSocket
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Sin buffering para WebSocket
            proxy_buffering off;
        }

        # Health checks (sin rate limiting)
        location = /health {
            proxy_pass http://web_backend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            access_log off;
        }

        # Panel de administración (con restricciones adicionales)
        location /admin/ {
            # Opcional: Restringir por IP
            # allow 192.168.1.0/24;
            # deny all;
            
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://web_backend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Aplicación web principal
        location / {
            proxy_pass http://web_backend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Caché básico para páginas estáticas
            proxy_cache app_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Robots.txt
        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /admin/\nDisallow: /api/\nDisallow: /mcp/\n";
            add_header Content-Type text/plain;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 "Página no encontrada";
        }
        
        location = /50x.html {
            internal;
            return 500 "Error interno del servidor";
        }
    }

    # Configuración adicional para monitoreo
    server {
        listen 8090;
        server_name localhost;
        
        location = /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            deny all;
        }
        
        location = /nginx-health {
            return 200 "OK\n";
            add_header Content-Type text/plain;
            access_log off;
        }
    }
}