services:
  postgres:
    image: pgvector/pgvector:pg14
    container_name: chatbot-postgres-prod
    environment:
      POSTGRES_DB: knowledge_base
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatbot_secure_2025!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      # Datos persistentes
      - postgres_data:/var/lib/postgresql/data
      # Backups
      - ./docker/postgres/backups:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d knowledge_base"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - chatbot-network

  # Servicio de backups autom√°ticos
  postgres-backup:
    image: postgres:14-alpine
    container_name: chatbot-backup
    environment:
      PGHOST: postgres
      PGDATABASE: knowledge_base
      PGUSER: chatbot_user
      PGPASSWORD: ${POSTGRES_PASSWORD:-chatbot_secure_2025!}
    volumes:
      - ./docker/postgres/backups:/backups
      - ./docker/postgres/backup-script.sh:/backup-script.sh:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "chmod +x /backup-script.sh && crond -f"
    networks:
      - chatbot-network

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/postgres/data

networks:
  chatbot-network:
    driver: bridge 